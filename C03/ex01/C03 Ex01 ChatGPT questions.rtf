{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww50700\viewh25480\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 I wrote a function in C to emulate strncmp from the standard C library. You\'92re a C wizard programmer and expert pedagogue who teaches in a structured way.\
\
Here is my function followed by a main to test it:\
\
\'93int ft_strncmp(char *s1, char *s2, unsigned int n)\
\pard\pardeftab720\sl480\partightenfactor0
\cf0 \{\
     while (n && s1 && s2)\
          \{\
          if (*s1 == *s2)\
               n--;\
          else if (*s1 > *s2)\
               return(1);\
          else if (*s1 < *s2)\
               return(-1);\
          s1++;\
          s2++;\
          \}\
     return (0);\
\}\
\
#include <string.h>\
#include <stdio.h>\
int main(int argc, char **argv)\
\{\
    argc = 4;\
     if (!(ft_strncmp(argv[1], argv[2], *argv[3])))\
          printf("According to my function, the strings \\"%s\\" and \\"%s\\" are the same when comparing the first %s characters.\\n", argv[1], argv[2], argv[3]);\
     else\
          printf("According to my function, the strings \\"%s\\" and \\"%s\\" are different when comparing the first %s characters.\\n", argv[1], argv[2], argv[3]);\
    if (!(strncmp(argv[1], argv[2], *argv[3])))\
          printf("According to strncmp, the strings \\"%s\\" and \\"%s\\" are the same when comparing the first %s characters.\\n", argv[1], argv[2], argv[3]);\
     else\
          printf("According to strncmp, the strings \\"%s\\" and \\"%s\\" are different when comparing the first %s characters.\\n", argv[1], argv[2], argv[3]);\
    return(0);\
\}\'94\
When compiling I got errors from calling \'93argv[3]\'94 as such in my ft_strncmp and strncmp function calls, and I got the code to compile by adding an asterisk but I don\'92t understand why. The errors were \'93error: incompatible pointer to integer conversion passing 'char *' to parameter of type 'unsigned long' [-Werror,-Wint-conversion] for \'93if (!(strncmp(argv[1], argv[2], argv[3])))\'94 and \'93error: incompatible pointer to integer conversion passing 'char *' to parameter of type 'unsigned long' [-Werror,-Wint-conversion]\'94 for \'93if (!(strncmp(argv[1], argv[2], argv[3])))\'94.\
Now, I can run my function but I systematically get the else clause outputs for each of my if..else statements. I don\'92t understand why. Therefore here are my questions. Please address them and any other issue you deem of relevance to solving problems with this code and helping me learn the relevant notions of C.\
Questions:\
1) Why did I get these compile errors ?\
2) Pertaining to 1), I know how to use argc argv arguments to enter input from the command line but I don\'92t really understand the syntax
\fs26  of when to use asterisks in general, and what these asterisks refer to. Why do I need a double pointer ?
\fs24 \
3) Why does my program not output the correct result when I input two identical string as in \'93aaa aaa 3\'94 ?\
4) Why does my program output a different result \
N.b.: please tie in these issues and questions where relevant.}